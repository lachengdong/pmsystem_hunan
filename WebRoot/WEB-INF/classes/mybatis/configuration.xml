<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:connection.properties" />

	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close" lazy-init="false" >
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${databaseurl}" />
		<property name="username" value="${databaseusername}" />
		<property name="password" value="${databaseuserpassword}" />
		<property name="driverClassName" value="${drivername}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${minPoolSize}" />
		<property name="maxActive" value="${maxPoolSize}" />
		<property name="minIdle" value="${minPoolSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="10000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		 <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="30000" />
		<!-- 连接有效性测试 -->
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<!-- 强行关闭长时间不归还的连接,防止泄露,单位秒 -->
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="18000" />
		<property name="logAbandoned" value="true" />
		<property name="useGloalDataSourceStat" value="true" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!-- 
        	Oracle，则把poolPreparedStatements配置为true;
        	mysql可以配置为false,分库分表较多的数据库，建议配置为false
         -->
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="0" />

		<!-- 如果有特殊SQL被拦截,可以将SQL防火墙wall去掉 -->
		<!-- 
		<property name="filters" value="wall"/>
		 -->
		<property name="proxyFilters">
	        <list>
	        	<!-- 挂载监控统计拦截的filters -->
	            <ref bean="stat-filter" />
	            <ref bean="log-filter" />
	        </list>
	    </property>
	</bean>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<!-- 表示在mybatis.mapping包或以下所有目录中，以 Mapper.xml结尾所有文件 -->
		<property name="mapperLocations">
			<value>classpath:com/sinog2c/dao/oracle/**/*Mapper.xml</value>
			<!-- 
			<list>
				<value>classpath:com/sinog2c/dao/oracle/res/*Mapper.xml</value>
				<value>classpath:com/sinog2c/dao/oracle/user/*Mapper.xml</value>
			</list>
			 -->
		</property>
		<!-- 
		<property name="configLocation">
			<value>classpath:mybatis/mybatis-env-setting.xml</value>
		</property>
		 -->
		<!--  切换一种方式,不能配置configLocation  -->
		<property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">true</prop>
				<prop key="callSettersOnNulls">true</prop>
			</props>
		</property>		
		<property name="plugins">
			<array>
			<!-- 
				<bean class="com.sinog2c.util.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=oracle
							reasonable=true
	          			</value>
					</property>
				</bean>
			 -->
			</array>
		</property>
	</bean>

	<!-- 自动扫描下面的组件, 接口上需要注解 @Component("bean的id") -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sinog2c.dao.api" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- MyBatis会自动参与到spring事务管理中,只要org.mybatis.spring.SqlSessionFactoryBean引用的数据源,
		与DataSourceTransactionManager引用的数据源一致即可，否则事务管理会不起作用 -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置druid监控spring jdbc -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
	    <property name="slowSqlMillis" value="3000" />
	    <!-- 统计慢SQL的开关 -->
	    <property name="logSlowSql" value="true" />
	    <!-- 在统计中合并同类SQL的开关 -->
	    <property name="mergeSql" value="true" />
	</bean>
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<!-- 日志输出,输出可执行语句 -->
        <property name="statementExecutableSqlLogEnable" value="false" />
    </bean>
	<!-- 配置_Druid和Spring关联监控 -->
	<bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		scope="prototype">
		<property name="patterns">
			<list>
				<value>com.sinog2c.service.impl.*</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor"
			pointcut-ref="druid-stat-pointcut" />
	</aop:config>
</beans>
